input {
 file {
   path => "/tmp/logfiles/System*"
   start_position => "beginning"
   codec => multiline {
     # Grok pattern names are valid! :)
     pattern => "^\[%{DATE}\] "
     negate => true
     what => "previous"
   }
 }
}
input {
  tcp {
    port => 5000
    codec => multiline {
      pattern => "^\[%{DATE} "
      negate => true
      what => "previous"
    }
  }
}

# Add your filters / logstash plugins configuration here
filter {
  if "multiline" in [tags] {
    grok {
      match => { "message" => "\[%{DATE:date} %{TIME:time} %{WORD:timezone}\]\s+%{WORD:threadid:}\s+%{WORD:class}\s+%{WORD:event_type}\s+(?<msg_main>(.+?(?=\t)|.+))" }
      add_field => [ "timestamp", "%{date} %{time}" ]
    }
    date {
      match => [ "timestamp", "M/dd/yy HH:mm:ss:SSS" ]
    }
  }
}
filter {
  if "multiline" not in [tags] {
    grok {
      match => { "message" => "\[%{DATE:date} %{TIME:time} %{WORD:timezone}\n?\]\s+%{WORD:threadid:}\s+%{WORD:class}\s+%{WORD:event_type}\s+%{GREEDYDATA:msg_main}" }
      add_field => [ "timestamp", "%{date} %{time}" ]
    }
    date {
      match => [ "timestamp", "M/dd/yy HH:mm:ss:SSS" ]
    }
  }
}
#  mutate {
#    add_field => {"timestamp" => "%{date} %{time}"}
#  }
#  date {match => ["timestamp", "MM-DD-yyy HH:mm:ss.SSSZ", "dd-MM-yyyy HH:mm:ss"]
#    match => ["timestamp", "MM-DD-yyy HH:mm:ss.SSSZ", "dd-MM-yyyy HH:mm:ss"]
#    target => "@timestamp"
#  }
output {
	elasticsearch {
		hosts => "elasticsearch:9200"
	}
}
